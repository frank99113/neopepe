(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7321],{1196:(e,a,t)=>{"use strict";t.d(a,{A:()=>O});var n=t(12115),s=t(68391),i=t(2145),r=t(87316),o=t(10709),d=t(36241),l=t(44494),c=t(14493),u=t(1405),p=t(89090),m=t(61046),y=t(31942),b=t(81757),g=t(44142),f=t(58983),w=t(33612);let h=()=>{let e=(0,w.A)(),{data:a}=(0,s.G)();return{publicClient:(0,n.useMemo)(()=>{var a;return(0,o.l)({chain:e,transport:(0,d.L)(null==(a=f.A.rpcUrls[e.id])?void 0:a.http),batch:{multicall:!0}})},[e]),walletClient:a}};var T=t(33454);let v=[{inputs:[{internalType:"address",name:"_aggregatorAddress",type:"address"},{internalType:"address",name:"_feeWallet",type:"address"},{internalType:"address",name:"_pepeWallet",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"AddressEmptyCode",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"AddressInsufficientBalance",type:"error"},{inputs:[],name:"FailedInnerCall",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"SafeERC20FailedOperation",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"buyer",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"BuyNEOP",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"addAllowedPayTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"allowedPaymentMethod",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"balanceOfPerStage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_stage",type:"uint256"}],name:"buyNeoPepe",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"emergencyWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"feeWallet",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getETHPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getTokenAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"participantExists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"participants",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"participantsDetailsList",outputs:[{components:[{internalType:"address",name:"buyer",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct NEOPresale.ParticipantDetails[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"pepeWallet",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"priceFeed",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"priceFeedDec",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"priceInUSD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_tokens",type:"address[]"}],name:"removeAllowedPayTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"resumeSale",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"saleStatus",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"saleTokenDec",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_priceInUSD",type:"uint256"},{internalType:"uint256",name:"_totalTokensForSale",type:"uint256"},{internalType:"bool",name:"_saleStatus",type:"bool"}],name:"startMemetrix",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopSale",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_priceInUSD",type:"uint256"}],name:"switchStage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalParticipants",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalTokensSold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalTokensforSale",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_aggregatorAddress",type:"address"}],name:"updateAggregator",outputs:[],stateMutability:"nonpayable",type:"function"}],k=()=>{let e=(0,w.A)(),{publicClient:a,walletClient:t}=h();return{saleContract:(0,n.useMemo)(()=>(0,T.PF)({abi:v,address:f.A.contract[e.id],client:{public:a,wallet:t||void 0}}),[e,a,t])}};var S=t(23570),E=t(12340),A=t(68423),x=t(74966),P=t(8428),D=t(1466),_=t(53999),M=t(51235);let N=f.A.chains.filter(e=>"Solana"!==e.name).reduce((e,a)=>{var t;return e[a.id]=(0,o.l)({chain:a,transport:(0,d.L)(null==(t=f.A.rpcUrls[a.id])?void 0:t.http),batch:{multicall:!0}}),e},{}),C=new S.Ng("https://mainnet.helius-rpc.com/?api-key=d41c4356-1c64-45a2-befd-3b5e914d8b0c"),O=()=>{let e=(0,w.A)(),a=(0,n.useMemo)(()=>N[e.id],[e]),{walletProvider:t}=(0,M.AX)("solana"),[o,d]=(0,n.useState)(!1),[h,T]=(0,n.useState)(!1),O=(0,n.useMemo)(()=>f.A.payableTokens[e.id],[e]),U=(0,n.useMemo)(()=>f.A.saleToken[e.id],[e]),{totalTokensSold:B,ethPrice:j,solPrice:W,balances:H,prices:I}=(0,g.j)(),{data:R}=(0,s.G)(),{address:$}=(0,i.F)(),F=(0,M.G8)(),{saleContract:L}=k(),G=(0,n.useMemo)(()=>{let e=f.A.stages[0],a=0;if(!B)return e;for(let t=0;t<f.A.stages.length;t++){let n=f.A.stages[t];if((a+=n.tokens)>+B){e=n;break}}return e},[B]),X=async()=>{let e=await Promise.all(f.A.chains.filter(e=>f.A.contract[e.id]).map(e=>N[e.id].readContract({address:f.A.contract[e.id],abi:v,functionName:"totalTokensSold"}))),a=await D.r.$get("/transactions/total-purchased-amount",{params:{is_evm:0}}).catch(()=>({total_purchased_amount:0}));console.log(a),g.j.setState({totalTokensSold:+Y(e.reduce((e,a)=>e+a,0n))+f.A.extraAmount+ +a.total_purchased_amount})},J=async()=>{if("Solana"!==e.name){if(!$)return;let e=await Promise.all(O.map(e=>e.address?a.readContract({address:e.address,abi:c.xw,functionName:"balanceOf",args:[$]}):a.getBalance({address:$}))),t=await L.read.balanceOf([$]);O.forEach((a,t)=>{g.j.setState({balances:{...g.j.getState().balances,[a.symbol]:+(0,u.J)(e[t],a.decimals)}})}),g.j.setState({balances:{...g.j.getState().balances,[U.symbol]:+Y(t)}})}else if(C&&(null==t?void 0:t.publicKey)){let e=await Promise.all(O.map(async e=>{if(!(null==t?void 0:t.publicKey))return 0n;if(!e.address)return BigInt(await C.getBalance(t.publicKey));{let a=new S.J3(e.address),n=await (0,E.Ob)(a,t.publicKey);return(await (0,A.sU)(C,n).catch(()=>({amount:0n}))).amount}}));O.forEach((a,t)=>{g.j.setState({balances:{...g.j.getState().balances,[a.symbol]:+(0,u.J)(e[t],a.decimals)}})})}},z=async()=>{if("Solana"!==e.name){let e=await L.read.getETHPrice(),a=await L.read.priceInUSD(),t=+(0,l.c)(e),n=+(0,l.c)(a);O.forEach(e=>{g.j.setState({ethPrice:t,prices:{...g.j.getState().prices,[e.symbol]:e.address?n:n/t}})})}else O.forEach(e=>{g.j.setState({prices:{...g.j.getState().prices,[e.symbol]:e.address?G.price:G.price/W}})})},V=async(e,t,n,s)=>{if(e.address&&R&&await a.readContract({address:e.address,abi:c.xw,functionName:"allowance",args:[t,n]})<s){let t=await R.writeContract({address:e.address,abi:c.xw,functionName:"approve",args:[n,2n**256n-1n]});await a.waitForTransactionReceipt({hash:t}),r.oR.success("Spend approved")}},q=async e=>{if(!e||!$)return 0;let a=(0,p.X)("".concat((H[e.symbol]||0)/2),e.decimals),t=await L.estimateGas.buyNeoPepe([(null==e?void 0:e.address)||m.Xd,a,1n],{value:a,account:$});return Math.max(10*(0,y.Q)(t),.001)},K=async(t,n)=>{var s,i,o,c,u,y,b;let g,w=!1;if((n.address?+t:t*j)<f.A.minPurchaseAmountUSD)return r.oR.error("Minimum purchase amount is ".concat(f.A.minPurchaseAmountUSD," USD")),{success:w};if(!$||!R)return{success:w,txHash:g};d(!0),T(!0);try{let d=(0,p.X)("".concat(t),n.decimals);n.address&&await V(n,$,L.address,d);let{request:c}=await L.simulate.buyNeoPepe([n.address||m.Xd,d,BigInt(G.stage)],{value:n.address?0n:d,account:$});g=await R.writeContract(c),T(!1),await a.waitForTransactionReceipt({hash:g});let u=await L.read.getTokenAmount([n.address||m.Xd,d]);null==(s=window.dataLayer)||s.push({event:"tokenPurchase",transactionId:g,value:+t,currency:n.symbol}),null==(i=(o=window).hj)||i.call(o,"event","presale_buy"),await Q({wallet_address:$,purchased_amount:+(0,l.c)(u),paid_amount:+t,paid_with:n.symbol,tx_hash:g,stage:G.stage,chain_id:e.id,is_evm:!0}).catch(()=>{}),J(),X(),r.oR.success("You just grabbed ".concat((0,_.ZV)((0,l.c)(u))," ").concat(U.symbol," tokens. Big brain move! \uD83E\uDDE0\uD83D\uDCB0")),w=!0}catch(e){console.log(e),r.oR.error((null==e||null==(u=e.walk)||null==(c=u.call(e))?void 0:c.shortMessage)||(null==e||null==(b=e.walk)||null==(y=b.call(e))?void 0:y.message)||(null==e?void 0:e.message)||"Transaction failed")}return T(!1),d(!1),{success:w,txHash:g}},Z=async(a,n)=>{let s,i,o=!1;if(!F.address||!C||!(null==t?void 0:t.publicKey))return{success:o,txHash:s};d(!0);try{var l,c,u;let d=t.publicKey,m=new S.J3(f.A.solanaWallets.owner),y=new S.J3(f.A.solanaWallets.team),b=.95*a,g=(0,p.X)("".concat(b),n.decimals),w=(0,p.X)("".concat(a-b),n.decimals);if(n.address){let e=new S.J3(n.address),a=await (0,E.Ob)(e,d),t=await (0,E.Ob)(e,m),s=await (0,E.Ob)(e,y),r=[],o=async(a,t)=>{await C.getAccountInfo(a)||r.push((0,x.JA)(d,a,t,e))};await o(a,d),await o(t,m),await o(s,y),r.push((0,P.C3)(a,t,d,g),(0,P.C3)(a,s,d,w)),i=new S.ZX().add(...r)}else i=new S.ZX().add(S.yq.transfer({fromPubkey:d,toPubkey:m,lamports:g}),S.yq.transfer({fromPubkey:d,toPubkey:y,lamports:w}));let{blockhash:h,lastValidBlockHeight:T}=await C.getLatestBlockhash();if(i.feePayer=d,i.recentBlockhash=h,s=await t.signAndSendTransaction(i),(await C.confirmTransaction({signature:s,blockhash:h,lastValidBlockHeight:T},"confirmed")).value.err)return alert("Transaction failed."),{success:o,txHash:s};let v=+parseFloat((a/I[n.symbol]).toFixed(6));null==(l=window.dataLayer)||l.push({event:"tokenPurchase",transactionId:s,value:+a,currency:n.symbol}),null==(c=(u=window).hj)||c.call(u,"event","presale_buy"),await Q({wallet_address:F.address,purchased_amount:v,paid_amount:+a,paid_with:n.symbol,tx_hash:s,stage:G.stage,chain_id:e.id,is_evm:!1}).catch(()=>{}),J(),r.oR.success("You just grabbed ".concat(v," ").concat(U.symbol," tokens. Big brain move! \uD83E\uDDE0\uD83D\uDCB0")),o=!0}catch(e){r.oR.error((null==e?void 0:e.message)||"Transaction failed")}return d(!1),{success:o,txHash:s}},Q=async e=>{let a=new URLSearchParams(window.location.search).get("ref")||localStorage.getItem("noereferral");return a&&(0,b.P)(a)&&(e.referrer_address=a),D.r.post("/transactions",e)},Y=e=>(0,u.J)(e,U.decimals);return{pendingTransaction:h,saleContract:L,currentStage:G,saleToken:U,loading:o,tokens:O,parse:e=>(0,p.X)("".concat(e),U.decimals),format:Y,buyToken:K,addTokenAsset:async e=>{if(e.address&&R)try{var a;await R.watchAsset({type:"ERC20",options:{address:e.address,symbol:e.symbol,decimals:null!=(a=e.decimals)?a:18,image:e.image.includes("http")?e.image:"".concat(window.location.origin).concat(e.image)}}),r.oR.success("Token imported to metamask successfully")}catch(e){r.oR.error("Token import failed")}},fetchIntialData:async()=>{await Promise.all([X(),z()])},fetchTokenBalances:J,fetchNeopBalance:async()=>{if($)return(await Promise.all(f.A.chains.filter(e=>f.A.contract[e.id]).map(e=>N[e.id].readContract({address:f.A.contract[e.id],abi:v,functionName:"balanceOf",args:[$]})))).reduce((e,a)=>e+=+(0,l.c)(a),0)},buyTokenEstimatedGas:q,buyTokenWithSolana:Z}}},1466:(e,a,t)=>{"use strict";t.d(a,{r:()=>n});let n=t(23464).A.create({baseURL:"https://matrix-api.neopepe.ai/api",headers:{"Content-Type":"application/json",Accept:"application/json"}});n.$get=async(e,a)=>(await n.get(e,a)).data},33612:(e,a,t)=>{"use strict";t.d(a,{A:()=>r});var n=t(58983),s=t(12115),i=t(51235);let r=()=>{let{chainId:e}=(0,i.HV)();return(0,s.useMemo)(()=>n.A.chains.find(a=>a.id===e)||n.A.chains[0],[e])}},44142:(e,a,t)=>{"use strict";t.d(a,{j:()=>i});var n=t(65521);let s={balances:{},prices:{},totalTokensSold:0,totalTokensforSale:0,ethPrice:1,saleStatus:!1,fromToken:null,selectedChain:null,solPrice:t(58983).A.solPrice},i=(0,n.v)()(()=>({...s}))},47790:()=>{},53999:(e,a,t)=>{"use strict";function n(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return e?Number(e).toLocaleString(void 0,{maximumFractionDigits:a}):0}function s(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return e?Number(e).toLocaleString(void 0,{notation:"compact",maximumFractionDigits:a}):0}t.d(a,{$M:()=>s,ZV:()=>n})},58983:(e,a,t)=>{"use strict";t.d(a,{A:()=>c});var n=t(37200),s=t(37120),i=t(40016),r=t(55557),o=t(50299),d=t(93151);let l="799c03c6ca8840129eb921f32b721101",c={chains:[n.r,s.N,i.E,d.tWt],rpcUrls:{[n.r.id]:{http:"https://mainnet.infura.io/v3/".concat(l),ws:"wss://mainnet.infura.io/ws/v3/".concat(l)},[s.N.id]:{http:"https://bsc-mainnet.infura.io/v3/".concat(l),ws:"wss://bsc-mainnet.infura.io/ws/v3/".concat(l)},[i.E.id]:{http:"https://base-mainnet.infura.io/v3/".concat(l),ws:"wss://base-mainnet.infura.io/ws/v3/".concat(l)}},chainsList:[{id:n.r.id,name:n.r.name,isEvm:!0,chain:n.r,logo:"/images/icon/ethereum.webp"},{id:s.N.id,name:"BNB",isEvm:!0,chain:s.N,logo:"/images/icon/bnb.png"},{id:i.E.id,name:i.E.name,isEvm:!0,chain:i.E,logo:"/images/icon/base.png"},{id:d.tWt.id,name:d.tWt.name,isEvm:!1,chain:d.tWt,logo:"/images/icon/sol.webp"}],solanaWallets:{owner:"AhuzPJRknCU1svt5zwGW5gk5ffzQxZGVmaSutqDgUeHy",team:"EyQz1hHVanVsQxkMR4LzkPDmD4cSP3eNSQoD1skEGmaW"},solPrice:150,presaleStartTime:0x671a52e0,presaleEndTime:0x68395f40,minPurchaseAmountUSD:5,extraAmount:0x1b87071,stages:[{stage:0,price:.05423,tokens:2238908},{stage:1,price:.061461,tokens:4805245},{stage:2,price:.068691,tokens:9358372},{stage:3,price:.075922,tokens:0xfba431},{stage:4,price:.083153,tokens:0x19072bc},{stage:5,price:.090383,tokens:0x23e96dd},{stage:6,price:.097614,tokens:0x2e6802f},{stage:7,price:.104845,tokens:0x35f5187},{stage:8,price:.112075,tokens:0x386898f},{stage:9,price:.119306,tokens:0x34fd5da},{stage:10,price:.126537,tokens:0x2cb524a},{stage:11,price:.133767,tokens:0x21dd389},{stage:12,price:.140998,tokens:0x1705333},{stage:13,price:.148229,tokens:0xe0a460},{stage:14,price:.155459,tokens:8054041},{stage:15,price:.16269,tokens:3951292}],contract:{[r.G.id]:"0x6e0791bd7b7774f8caa3a5867a333f55b54cfff6",[o.c.id]:"0x77E504ad1657d00b71906909E4A307433EE7B0d1",[n.r.id]:"0x7D131c769B134DFDFb8C0C264532C46673456Eec",[i.E.id]:"0xb7d53fda47be52fe6771ae4d8b125f779f9819d9",[s.N.id]:"0xb7d53fda47be52fe6771ae4d8b125f779f9819d9"},saleToken:{[o.c.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18},[r.G.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18},[s.N.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18},[n.r.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18},[i.E.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18},[d.tWt.id]:{symbol:"$NEOP",name:"$NEOP",image:"/images/icon/neo-coin.png",decimals:18}},payableTokens:{[r.G.id]:[{address:null,symbol:"ETH",name:"ETH",image:"/images/icon/ethereum.webp",decimals:18},{address:"0xa800ce07064563ffad2ef17b5bb5155cb43787c3",symbol:"USDT",name:"Tether USD",image:"/images/icon/tether-usdt.png",decimals:18}],[o.c.id]:[{address:null,symbol:"BNB",name:"BNB",image:"/images/icon/bnb.png",decimals:18},{address:"0x10916b313e3b441d41caf5d17ace866dde845496",symbol:"USDT",name:"Tether USD",image:"/images/icon/tether-usdt.png",decimals:18}],[n.r.id]:[{address:null,symbol:"ETH",name:"ETH",image:"/images/icon/ethereum.webp",decimals:18},{address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"USDT",name:"Tether USD",image:"/images/icon/tether-usdt.png",decimals:6},{address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"USDC",name:"USDC",image:"/images/icon/usdc.png",decimals:6}],[i.E.id]:[{address:null,symbol:"ETH",name:"ETH",image:"/images/icon/ethereum.webp",decimals:18},{address:"0x833589fcd6edb6e08f4c7c32d4f71b54bda02913",symbol:"USDC",name:"USDC",image:"/images/icon/usdc.png",decimals:6}],[s.N.id]:[{address:null,symbol:"BNB",name:"BNB",image:"/images/icon/bnb.png",decimals:18},{address:"0x55d398326f99059ff775485246999027b3197955",symbol:"USDT",name:"Tether USD",image:"/images/icon/tether-usdt.png",decimals:18},{address:"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",symbol:"USDC",name:"USDC",image:"/images/icon/usdc.png",decimals:18}],[d.tWt.id]:[{address:null,symbol:"SOL",name:"SOL",image:"/images/icon/sol.webp",decimals:9},{address:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",symbol:"USDC",name:"USD Coin",image:"/images/icon/usdc.png",decimals:6}]}}}}]);